library(rio)
data = import("https://github.com/ChiaraZamoraM/ABCInvestiga/raw/main/data/votacion-distrito-resultados.csv")
head(data)
tail(data)
nrow(data)
ncol(data)
dim(data)
str(data)
data[1,] #Queremos la primera fila
data[,1] #Queremos la primera columna
data[3,1]
data = data[,c(1:3,5,6,7)] #Nos quedamos con algunas columnas
library(reshape2)
data=reshape(data, direction="wide",
idvar=c("departamento", "provincia","distrito"),
timevar="AGRUPACION") #Queremos reestructurar los datos
colnames(data) = c("DEPA","PROV","DIST","VOT_PL","PORC_PL","VOT_FP","PORC_FP") #Cambiar nombres de columnas
data$total = data$VOT_FP + data$VOT_PL
library(dplyr)
prov = data %>% group_by(DEPA,PROV) %>%
summarise(FP_VOTOS = sum(VOT_FP, na.rm = T),
TOTAL_VOTOS = sum(total, na.rm = T)) #Agregamos información a nivel provincia
prov$PORC = prov$FP_VOTOS/prov$TOTAL_VOTOS*100 #Sacamos frecuencia porcentual
prov$PORC = round(prov$PORC, 2) #Redondeamos a dos dígitos
library(dplyr)
depa = data %>% group_by(DEPA) %>%
summarise(FP_VOTOS = sum(VOT_FP, na.rm = T),
TOTAL_VOTOS = sum(total, na.rm = T)) #Agregamos información a nivel provincia
depa$PORC = depa$FP_VOTOS/depa$TOTAL_VOTOS*100 #Sacamos frecuencia porcentual
depa$PORC = round(depa$PORC, 2) #Redondeamos a dos dígitos
hist(data$PORC_FP)
hist(prov$PORC)
hist(depa$PORC)
View(depa)
library(rio)
library(reshape2)
library(stringr)
library(ggthemes)
library(dplyr)
segunda_vuelta = import("https://github.com/ChiaraZamoraM/ABCInvestiga/raw/main/data/votacion-distrito-resultados.csv")
ubigeos = import("https://github.com/ChiaraZamoraM/ABCInvestiga/raw/main/data/votacion-distrito-resumen.csv") #Para incluir UBIGEO RENIEC
equivalencias = import("https://github.com/ChiaraZamoraM/ABCInvestiga/raw/main/data/Equivalencias.xlsx") #Para incluir UBIGEO INEI
data = segunda_vuelta[,c(1:3,5,6,7)]
head(data)
#De columnas a filas:
data=reshape(data, direction="wide", idvar=c("departamento", "provincia","distrito"), timevar="AGRUPACION")
head(data)
colnames(data) = c("DEPA","PROV","DIST","VOT_PL","PORC_PL","VOT_FP","PORC_FP")
#Consiguiendo identificación por ubigeos:
data$id = paste0(data$DEPA,data$PROV)
data$id= paste0(data$id,data$DIST)
ubigeos$id = paste0(ubigeos$departamento,ubigeos$provincia)
ubigeos$id = paste0(ubigeos$id,ubigeos$distrito)
rownames(data) = NULL #Restauramos el número de cada fila
data[1696,8]
ubigeos[1,33]
ubigeos = ubigeos[,c(4,33)]
ubigeos[1488,2]
data[32,8]
ubigeos$id=gsub(" ","",ubigeos$id) #De los ubigeos
data$id=gsub(" ","",data$id) #De la base de resultados electorales
ubigeos[1488,2]
data[32,8]
data = merge(data,ubigeos, by = "id")
data = data[,c(2:9)]
head(data)
#Nos quedamos con las columnas de interés: los dos ubigeos
equivalencias = equivalencias[,c(1,2)]
data[1,8]
#Falta un 0
data$CCODI_UBIGEO=str_pad(data$CCODI_UBIGEO, 6, pad = "0")
data[1,8]
data = merge(data,equivalencias, by.x = "CCODI_UBIGEO", by.y = "UBIGEO_RENIEC", all.x = T)
colnames(data) = c("UBIGEO_RENIEC","DEPA","PROV","DIS","VOTOS_PL","PORC_PL","VOTOS_FP","PORC_FP","UBIGEO_INEI")
head(data)
ceplan = import("https://github.com/ChiaraZamoraM/ABCInvestiga/raw/main/data/ceplan.xlsx")
indig = import("https://github.com/ChiaraZamoraM/ABCInvestiga/raw/main/data/indig.xlsx")
head(ceplan)
tail(ceplan)
ceplan = ceplan %>%
select(c(1,2,6,9,30,40,48)) #Nos quedamos con algunas columnas
colnames(ceplan) = c("CAT","UBIGEO","POB_2020","DISC_2020","DESNUTRICION","POBREZA","GASTO") #Cambiamos los nombres de las columnas
ceplan = ceplan %>%
filter(CAT == "Distrito") #Filtramos por distritos
ceplan$POB_2020 = as.numeric(ceplan$POB_2020)
ceplan$DISC_2020 = as.numeric(ceplan$DISC_2020)
ceplan$POBREZA = as.numeric(ceplan$POBREZA)
ceplan$DESNUTRICION = as.numeric(ceplan$DESNUTRICION)
ceplan$GASTO = as.numeric(ceplan$GASTO)
#Porcentaje de personas que cuentan con alguna discapacidad:
ceplan$DISC_2020_PORC = ceplan$DISC_2020/ceplan$POB_2020
ceplan$DISC_2020_PORC = ceplan$DISC_2020_PORC*100
ceplan = ceplan[,c(2,5:8)]
data = merge(data,ceplan, by.x = "UBIGEO_INEI", by.y = "UBIGEO", all.x = T)
indig$TASA_INDIGENA = indig$TASA_INDIGENA*100
data = merge(data, indig, by.x = "UBIGEO_INEI", by.y = "UBIGEO", all.x = T)
library(PerformanceAnalytics)
chart.Correlation(data[,c(7,10,11,12,13,14)], histogram=TRUE, pch=19)
modelo1 = lm(PORC_PL ~ TASA_INDIGENA, data = data)
summary(modelo1)
library(ggeffects)
ggpredict(modelo1)
modelo2 = lm(PORC_PL ~ TASA_INDIGENA + DESNUTRICION + DISC_2020_PORC + POBREZA + GASTO,
data = data)
summary(modelo2)
modelo2$coefficients
library(equatiomatic)
extract_eq(modelo2, use_coefs = T)
ggpredict(modelo2, terms = "TASA_INDIGENA")
ggpredict(modelo2, terms = "POBREZA")
library(ggplot2)
mydf <- ggpredict(modelo2, terms = "TASA_INDIGENA")
ggplot(mydf, aes(x, predicted)) + geom_line() + geom_point()
library(lm.beta)
lm.beta(modelo2)
modelo3 = lm(PORC_PL ~ scale(TASA_INDIGENA) + scale(DESNUTRICION) + scale(DISC_2020_PORC) + scale(POBREZA) + scale(GASTO),
data = data)
summary(modelo3)
